Nathan Flint
Lab5: Exceptions

1) Instantiated in m4: 
Exception in thread "main" java.lang.RuntimeException: Instantiated in m4
	at Oops.m4(Oops.java:27)
	at Oops.m3(Oops.java:22)
	at Oops.m2(Oops.java:18)
	at Oops.m1(Oops.java:12)
	at Oops.main(Oops.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)
	
2) Instantiated in m2
Exception in thread "main" java.lang.RuntimeException: Instantiated in m2
	at Oops.m2(Oops.java:17)
	at Oops.m1(Oops.java:12)
	at Oops.main(Oops.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)
	
3) Instantiated in the constructor
Exception in thread "main" java.lang.RuntimeException: Instantiated in the constructor
	at Oops.<init>(Oops.java:8)
	at Oops.main(Oops.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)

4) Instantiated in main
Exception in thread "main" java.lang.RuntimeException: Instantiated in main
	at Oops.main(Oops.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)

5) Instantiated in field declaration
Exception in thread "main" java.lang.RuntimeException: Instantiated in field declaration
	at Oops.<init>(Oops.java:4)
	at Oops.main(Oops.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)
	
6) Instantiated in field declaration
Exception in thread "main" java.lang.RuntimeException: Instantiated in field declaration
	at Oops.<clinit>(Oops.java:4)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:190)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:113)

7) An interesting observation is that the stack trace of the exception is
created when it is instantiated, and is not related to where the exception
was thrown. That's why the stack trace doesn't match where the exception was
throw in many of the above examples.

The lifetime of an object begins before the constructor is executed. When field
delcarations instantiate a class, those are run before the constructor is run.
Additionally, the life of a class can preceed execution of even the application
method for static fields. For example: In answer 6 above, the exception
shows a stack trace that where the main method of the Oops applciation hasn't
even been run yet.